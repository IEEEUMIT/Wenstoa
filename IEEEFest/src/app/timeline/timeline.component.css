.timelinepg {
  background: var(--background-color);
  font-family: var(--font);
  display: flex;
  justify-content: center;
  background-image: url(https://media.giphy.com/media/l41lZZqhIUA6IJNDO/giphy.gif);
  background-image: no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  background-color: white;
}

/* Timeline Container */
.timeline {
  background: var(--primary-color);
  margin-left: 250px;
  margin-top: 5px;
  margin-bottom: 5px;

  /*   margin: 1000px auto; */
  /*   padding: -100px; */
}

.text {
  font-size: 50px;
  margin-top: 800px;
  position: relative;
}
/* Card container */
.cardtl {
  position: relative;
  max-width: 1000px;
}

.date {
  font-size: 20px;
  margin-left: 690px;
  position: relative;
}

.date2 {
  font-size: 20px;
  margin-left: 20px;
  position: relative;
}

.time {
  font-size: 20px;
  margin-left: 10px;
  position: relative;
}
.time2 {
  font-size: 20px;
  margin-left: 680px;
  position: relative;
}

/* setting padding based on even or odd */
.cardtl:nth-child(odd) {
  padding: 30px 0 30px 30px;
}
.cardtl:nth-child(even) {
  padding: 30px 30px 30px 0;
}
/* Global ::before */
.cardtl::before {
  content: "";
  position: absolute;
  width: 50%;
  border: solid #000;
}

/* Setting the border of top, bottom, left */
.cardtl:nth-child(odd)::before {
  left: 0px;
  top: -4.5px;
  bottom: -4.5px;
  border-width: 5px 0 5px 5px;
  border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.cardtl:nth-child(even)::before {
  right: 0;
  top: 0;
  bottom: 0;
  border-width: 5px 5px 5px 0;
  border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.cardtl:first-child::before {
  border-top: 0;
  border-top-left-radius: 0;
}

/* Removing the border if it is the last card  and it's odd */
.cardtl:last-child:nth-child(odd)::before {
  border-bottom: 0;
  border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.cardtl:last-child:nth-child(even)::before {
  border-bottom: 0;
  border-bottom-right-radius: 0;
}

/* Information about the timeline */
.info {
  display: flex;
  flex-direction: column;
  background: #fff;
  color: gray;
  border-radius: 10px;
  width: 50vw;
  height: 150px;
  padding: 10px;
  position: relative;
}

/* Title of the card */
.title {
  color: #000;
  position: relative;
  font-size: 30px;
}
.title2 {
  color: #000;
  font-size: 30px;
  position: relative;
}

.title2::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 999px;
  border: 3px solid orangered;
}
.cardtl:nth-child(even) > .info > .title2 {
  text-align: right;
}

/* setting dot to the left if the card is odd */
.cardtl:nth-child(odd) > .info > .title2::before {
  left: -45px;
}

/* setting dot to the right if the card is odd */
.cardtl:nth-child(even) > .info > .title2::before {
  right: -45px;
}
/* Timeline dot  */
.title::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 999px;
  border: 3px solid orangered;
}

/* text right if the card is even  */
.cardtl:nth-child(even) > .info > .title {
  text-align: right;
}

/* setting dot to the left if the card is odd */
.cardtl:nth-child(odd) > .info > .title::before {
  left: -45px;
}

/* setting dot to the right if the card is odd */
.cardtl:nth-child(even) > .info > .title::before {
  right: -45px;
}
